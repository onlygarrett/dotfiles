# Environment Variables for Tmux
# tmux_conf_new_session_retain_current_path=true
thm_base="#191724"; # Used for
thm_surface="#1f1d2e"; # Used for
thm_overlay="#26233a";# Used for
thm_muted="#6e6a86"; # Used for
thm_subtle="#908caa"; # Used for
thm_text="#e0def4"; # Used for
thm_love="#eb6f92"; # Used for
thm_gold="#f6c177"; # Used for
thm_rose="#ebbcba"; # Used for
thm_pine="#31748f"; # Used for
thm_foam="#9ccfd8"; # Used for
thm_iris="#c4a7e7"; # Used for
thm_hl_low="#21202e"; # Used for
thm_hl_med="#403d52"; # Used for
thm_hl_high="#524f67"; # Used for

# General Settings
set -g default-terminal "screen-256color"
set -g default-shell /usr/bin/zsh
# set-option -g default-shell "/bin/zsh"
set -g history-limit 50000
set -sg escape-time 10
set -g detach-on-destroy off  # Don't exit tmux when closing a session
set -g focus-events on
set -gq allow-passthrough on
set -g xterm-keys on
setw -g mode-keys vi
set -g mouse on

# Activity and Events
set -g status 'on'
set -g status-style "fg=$thm_text,bg=$thm_base"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

set -g monitor-activity on
set -g visual-activity off
set -g status-interval 1
set -g status-position 'bottom'

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'

set -g @plugin 'omerxx/tmux-sessionx'

# Rose Pine Theme Plugin
set -g @plugin 'rose-pine/tmux'
set -g @rose_pine_variant 'moon'
set -g @rose_pine_host 'off'
set -g @rose_pine_current_window 'off'
set -g @rose_pine_directory 'off'
set -g @rose_pine_window_separator ' - '

set -g @rose_pine_right_separator '  '
set -g @rose_pine_left_separator '  '
set -g @rose_pine_window_status_separator "  "
set -g @rose_pine_disable_active_window_menu 'off'
set -g @rose_pine_status_left_prepend_section ''
set -g @rose_pine_status_left_append_section ''
set -g @rose_pine_status_right_prepend_section '#[fg=$thm_text]#(whoami) #[fg=$thm_text] #[fg=$thm_text] | #[fg=$thm_text]#H #[fg=$thm_text] #[fg=$thm_text] 󰒋 '
set -g @rose_pine_status_right_append_section '|#[fg=$thm_text] %a %d %b %I:%M %p #[fg=$thm_text] #[fg=$thm_text] 󰃰 | #[fg=$thm_subtle]  #[fg=$thm_rose]#{b:pane_current_path} '

# Truecolor Settings for Alacritty
set -ga terminal-overrides ',xterm-256color:Tc'

# Window and Pane Behavior
set -g base-index 1
set -g pane-base-index 1
set -g pane-border-style "fg=magenta"
set -g pane-active-border-style "fg=green,bg=default"
set -g display-panes-time 100000  # 100 seconds
set -g pane-border-status off
set -g pane-border-format " #P: #{pane_current_command} in #{pane_current_path} "

# rebinding leader to C-space
unbind-key C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix


# Key Bindings - Window and Pane Management
bind-key -n F2 new-window -c "#{pane_current_path}"
bind-key -n F5 split-window -h -c "#{pane_current_path}"
bind-key -n F6 split-window -v -c "#{pane_current_path}"
bind-key -n F8 command-prompt -I "#W" "rename-window '%%'"
bind-key -n F7 command-prompt "find-window '%%'"
bind-key -n F10 setw synchronize-panes
bind-key -n F11 resize-pane -Z
bind-key -n F12 kill-pane
bind-key -n C-PageDown next-window
bind-key -n C-PageUp previous-window
bind-key -n S-Left resize-pane -L
bind-key -n S-Right resize-pane -R
bind-key -n S-Up resize-pane -U
bind-key -n S-Down resize-pane -D
bind-key -n M-PageUp switch-client -p
bind-key -n M-PageDown switch-client -n
bind -n M-\; copy-mode
bind-key w select-window -t 1
bind -n M-s switch-client -l

# bind alt arrow keys
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Key Bindings - Pane Detach/Attach
bind-key ! break-pane -d -n _hidden_pane
bind-key @ join-pane -s $.1
bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'

# Key Bindings - Vim-Tmux Navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind-key -n 'M-m' if-shell "$is_vim" 'send-keys M-m' 'select-pane -t:.+'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Key Bindings - Utilities and Scripts
bind h run-shell "/home/grumschik/.config/scripts/__tmux_toggle_borders.sh"
bind r source-file "~/.config/tmux/tmux.conf" \; display "Tmux Reloaded"
bind -n M-r run-shell "/home/grumschik/.config/scripts/__trigger_yazi.sh"
# bind C-t popup -E -h 75% -w 83% -x 100% "python3 /home/decoder/dev/dotfiles/scripts/__hooks_parser.py /home/decoder/dev/dotfiles/.task/hooks/on-modify-openurl-or-program.py | bat -l md --style=plain --paging=always"
bind -n M-z popup -d '#{pane_current_path}' -E -h 75% -w 83% -x 100% "zsh"
bind -n M-b popup -d '#{pane_current_path}' -E -h 95% -w 95% -x 100% "btop"
bind -n M-g popup -d '#{pane_current_path}' -E -h 95% -w 95% -x 100% "EDITOR=nvim lazygit"

# Key Bindings - Tmux Session Control
# bind -n M-x display-popup -E "zsh -c '~/dev/dotfiles/scripts/__sessionizer.sh --no-popup'"
# bind -n M-e display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | fzf --reverse | xargs tmux kill-session -t"
# bind -n M-t display-popup -E "~/dev/dotfiles/scripts/__list_tmux_sessions.sh"

# Initialize TMUX Plugin Manager (keep this line at the very bottom of tmux.conf)
run "~/.config/tmux/plugins/tpm/tpm"

# Hide tmux status bar when entering Neovim
set-hook -g pane-focus-in 'if-shell "ps -o comm= -t #{pane_tty} | grep -q nvim" "set status off" "set status on"'
set-hook -g pane-focus-out 'set status on'
